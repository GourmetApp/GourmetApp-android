apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

android {

    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    defaultConfig {
        applicationId "com.jugarte.gourmet"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode versions.appCode
        versionName versions.appVersion

        vectorDrawables.useSupportLibrary = true

    }

    signingConfigs {
        releaseConfig {
            if (rootProject.file('keystore.properties').exists()) {
                def props = new Properties()
                props.load(new FileInputStream(rootProject.file('keystore.properties')))

                storeFile = file(props['storeFile'])
                storePassword = props['storePassword']
                keyAlias = props['keyAlias']
                keyPassword = props['keyPassword']
            } else {
                storeFile = file(System.getenv('TRAVIS_STORE_FILE'))
                storePassword = System.getenv('TRAVIS_STORE_PASSWORD')
                keyAlias = System.getenv('TRAVIS_ALIAS_KEY')
                keyPassword = System.getenv('TRAVIS_ALIAS_PASSWORD')
            }
        }
    }

    buildTypes {

        debug {
            debuggable true
            applicationIdSuffix ".debug"
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    def versionName = variant.versionName
                    outputFileName = "GourmetApp" + "-v" + versionName + ".apk"
                }
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

}

dependencies {

    // Gourmet module
    api project(':gourmet')

    // Kotlin
    implementation "androidx.core:core-ktx:$versions.kotlin_core"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"

    // Support
    implementation "androidx.appcompat:appcompat:$versions.androidx"
    implementation "androidx.legacy:legacy-support-v4:$versions.androidx"
    implementation "androidx.cardview:cardview:$versions.androidx"
    implementation "androidx.percentlayout:percentlayout:$versions.androidx"
    implementation "com.google.android.material:material:$versions.androidx"

    // Firebase
    implementation "com.google.firebase:firebase-database:$versions.firebase"

    // RX
    implementation "io.reactivex.rxjava2:rxandroid:$versions.rxandroid"
    implementation "io.reactivex.rxjava2:rxjava:$versions.rxjava"

    // Dagger
    implementation "com.google.dagger:dagger:$versions.dagger"
    annotationProcessor "com.google.dagger:dagger-compiler:$versions.dagger"

    // Butter knife
    implementation "com.jakewharton:butterknife:$versions.butterknife"
    annotationProcessor "com.jakewharton:butterknife-compiler:$versions.butterknife"

    // Third Party
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'
    implementation 'com.github.javierugarte:searchtoolbar:1.0.2' // https://github.com/javierugarte/SearchToolbar
    implementation 'br.com.simplepass:loading-button-android:1.8.0' // https://github.com/leandroBorgesFerreira/LoadingButtonAndroid
    implementation 'com.github.wrdlbrnft:sorted-list-adapter:0.3.0.27' // https://github.com/Wrdlbrnft/SortedListAdapter
    implementation 'com.brandongogetap:stickyheaders:0.5.1' // https://github.com/bgogetap/StickyHeaders

}

apply plugin: 'com.google.gms.google-services'